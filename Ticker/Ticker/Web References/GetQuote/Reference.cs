//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace Ticker.GetQuote {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="onDemandSoap", Namespace="http://marketdata.websol.barchart.com/service")]
    public partial class onDemand : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback getQuoteOperationCompleted;
        
        private System.Threading.SendOrPostCallback getHistoryOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public onDemand() {
            this.Url = global::Ticker.Properties.Settings.Default.Ticker_GetQuote_onDemand;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event getQuoteCompletedEventHandler getQuoteCompleted;
        
        /// <remarks/>
        public event getHistoryCompletedEventHandler getHistoryCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getQuote", RequestNamespace="http://marketdata.websol.barchart.com/service", ResponseNamespace="http://marketdata.websol.barchart.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public getQuoteItem[] getQuote(string apikey, string symbols, string fields, string mode, bool jerq, [System.Xml.Serialization.XmlIgnoreAttribute()] bool jerqSpecified, string exchangeFilter, string only) {
            object[] results = this.Invoke("getQuote", new object[] {
                        apikey,
                        symbols,
                        fields,
                        mode,
                        jerq,
                        jerqSpecified,
                        exchangeFilter,
                        only});
            return ((getQuoteItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getQuoteAsync(string apikey, string symbols, string fields, string mode, bool jerq, bool jerqSpecified, string exchangeFilter, string only) {
            this.getQuoteAsync(apikey, symbols, fields, mode, jerq, jerqSpecified, exchangeFilter, only, null);
        }
        
        /// <remarks/>
        public void getQuoteAsync(string apikey, string symbols, string fields, string mode, bool jerq, bool jerqSpecified, string exchangeFilter, string only, object userState) {
            if ((this.getQuoteOperationCompleted == null)) {
                this.getQuoteOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetQuoteOperationCompleted);
            }
            this.InvokeAsync("getQuote", new object[] {
                        apikey,
                        symbols,
                        fields,
                        mode,
                        jerq,
                        jerqSpecified,
                        exchangeFilter,
                        only}, this.getQuoteOperationCompleted, userState);
        }
        
        private void OngetQuoteOperationCompleted(object arg) {
            if ((this.getQuoteCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getQuoteCompleted(this, new getQuoteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("getHistory", RequestNamespace="http://marketdata.websol.barchart.com/service", ResponseNamespace="http://marketdata.websol.barchart.com/service", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(IsNullable=false)]
        public getHistoryItem[] getHistory(
                    string apikey, 
                    string symbol, 
                    getHistoryTypeEnum type, 
                    System.DateTime startDate, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool startDateSpecified, 
                    int maxRecords, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool maxRecordsSpecified, 
                    int interval, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool intervalSpecified, 
                    getHistoryOrderEnum order, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool orderSpecified, 
                    string sessionFilter, 
                    bool splits, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool splitsSpecified, 
                    bool dividends, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool dividendsSpecified, 
                    getHistoryVolumeEnum volume, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool volumeSpecified, 
                    int nearby, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool nearbySpecified, 
                    bool jerq, 
                    [System.Xml.Serialization.XmlIgnoreAttribute()] bool jerqSpecified) {
            object[] results = this.Invoke("getHistory", new object[] {
                        apikey,
                        symbol,
                        type,
                        startDate,
                        startDateSpecified,
                        maxRecords,
                        maxRecordsSpecified,
                        interval,
                        intervalSpecified,
                        order,
                        orderSpecified,
                        sessionFilter,
                        splits,
                        splitsSpecified,
                        dividends,
                        dividendsSpecified,
                        volume,
                        volumeSpecified,
                        nearby,
                        nearbySpecified,
                        jerq,
                        jerqSpecified});
            return ((getHistoryItem[])(results[0]));
        }
        
        /// <remarks/>
        public void getHistoryAsync(
                    string apikey, 
                    string symbol, 
                    getHistoryTypeEnum type, 
                    System.DateTime startDate, 
                    bool startDateSpecified, 
                    int maxRecords, 
                    bool maxRecordsSpecified, 
                    int interval, 
                    bool intervalSpecified, 
                    getHistoryOrderEnum order, 
                    bool orderSpecified, 
                    string sessionFilter, 
                    bool splits, 
                    bool splitsSpecified, 
                    bool dividends, 
                    bool dividendsSpecified, 
                    getHistoryVolumeEnum volume, 
                    bool volumeSpecified, 
                    int nearby, 
                    bool nearbySpecified, 
                    bool jerq, 
                    bool jerqSpecified) {
            this.getHistoryAsync(apikey, symbol, type, startDate, startDateSpecified, maxRecords, maxRecordsSpecified, interval, intervalSpecified, order, orderSpecified, sessionFilter, splits, splitsSpecified, dividends, dividendsSpecified, volume, volumeSpecified, nearby, nearbySpecified, jerq, jerqSpecified, null);
        }
        
        /// <remarks/>
        public void getHistoryAsync(
                    string apikey, 
                    string symbol, 
                    getHistoryTypeEnum type, 
                    System.DateTime startDate, 
                    bool startDateSpecified, 
                    int maxRecords, 
                    bool maxRecordsSpecified, 
                    int interval, 
                    bool intervalSpecified, 
                    getHistoryOrderEnum order, 
                    bool orderSpecified, 
                    string sessionFilter, 
                    bool splits, 
                    bool splitsSpecified, 
                    bool dividends, 
                    bool dividendsSpecified, 
                    getHistoryVolumeEnum volume, 
                    bool volumeSpecified, 
                    int nearby, 
                    bool nearbySpecified, 
                    bool jerq, 
                    bool jerqSpecified, 
                    object userState) {
            if ((this.getHistoryOperationCompleted == null)) {
                this.getHistoryOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetHistoryOperationCompleted);
            }
            this.InvokeAsync("getHistory", new object[] {
                        apikey,
                        symbol,
                        type,
                        startDate,
                        startDateSpecified,
                        maxRecords,
                        maxRecordsSpecified,
                        interval,
                        intervalSpecified,
                        order,
                        orderSpecified,
                        sessionFilter,
                        splits,
                        splitsSpecified,
                        dividends,
                        dividendsSpecified,
                        volume,
                        volumeSpecified,
                        nearby,
                        nearbySpecified,
                        jerq,
                        jerqSpecified}, this.getHistoryOperationCompleted, userState);
        }
        
        private void OngetHistoryOperationCompleted(object arg) {
            if ((this.getHistoryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.getHistoryCompleted(this, new getHistoryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://marketdata.websol.barchart.com/service")]
    public partial class getQuoteItem {
        
        private string symbolField;
        
        private string exchangeField;
        
        private string nameField;
        
        private string dayCodeField;
        
        private System.DateTime serverTimestampField;
        
        private string modeField;
        
        private double lastPriceField;
        
        private int tradeSizeField;
        
        private bool tradeSizeFieldSpecified;
        
        private System.DateTime tradeTimestampField;
        
        private double netChangeField;
        
        private double percentChangeField;
        
        private string tickField;
        
        private double previousLastPriceField;
        
        private bool previousLastPriceFieldSpecified;
        
        private System.DateTime previousTimestampField;
        
        private bool previousTimestampFieldSpecified;
        
        private double bidField;
        
        private bool bidFieldSpecified;
        
        private int bidSizeField;
        
        private bool bidSizeFieldSpecified;
        
        private double askField;
        
        private bool askFieldSpecified;
        
        private int askSizeField;
        
        private bool askSizeFieldSpecified;
        
        private string unitCodeField;
        
        private double openField;
        
        private double highField;
        
        private double lowField;
        
        private double closeField;
        
        private string flagField;
        
        private double previousCloseField;
        
        private bool previousCloseFieldSpecified;
        
        private double settlementField;
        
        private bool settlementFieldSpecified;
        
        private double previousSettlementField;
        
        private bool previousSettlementFieldSpecified;
        
        private int volumeField;
        
        private double openInterestField;
        
        private bool openInterestFieldSpecified;
        
        private double fiftyTwoWkHighField;
        
        private bool fiftyTwoWkHighFieldSpecified;
        
        private System.DateTime fiftyTwoWkHighDateField;
        
        private bool fiftyTwoWkHighDateFieldSpecified;
        
        private double fiftyTwoWkLowField;
        
        private bool fiftyTwoWkLowFieldSpecified;
        
        private System.DateTime fiftyTwoWkLowDateField;
        
        private bool fiftyTwoWkLowDateFieldSpecified;
        
        private int avgVolumeField;
        
        private bool avgVolumeFieldSpecified;
        
        private int sharesOutstandingField;
        
        private bool sharesOutstandingFieldSpecified;
        
        private float dividendRateAnnualField;
        
        private bool dividendRateAnnualFieldSpecified;
        
        private float dividendYieldAnnualField;
        
        private bool dividendYieldAnnualFieldSpecified;
        
        private System.DateTime exDividendDateField;
        
        private bool exDividendDateFieldSpecified;
        
        private double impliedVolatilityField;
        
        private bool impliedVolatilityFieldSpecified;
        
        private int twentyDayAvgVolField;
        
        private bool twentyDayAvgVolFieldSpecified;
        
        private string monthField;
        
        private string yearField;
        
        private System.DateTime expirationDateField;
        
        private bool expirationDateFieldSpecified;
        
        private string lastTradingDayField;
        
        private double twelveMnthPctField;
        
        private bool twelveMnthPctFieldSpecified;
        
        private System.DateTime twelveMnthPctDateField;
        
        private bool twelveMnthPctDateFieldSpecified;
        
        /// <remarks/>
        public string symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string exchange {
            get {
                return this.exchangeField;
            }
            set {
                this.exchangeField = value;
            }
        }
        
        /// <remarks/>
        public string name {
            get {
                return this.nameField;
            }
            set {
                this.nameField = value;
            }
        }
        
        /// <remarks/>
        public string dayCode {
            get {
                return this.dayCodeField;
            }
            set {
                this.dayCodeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime serverTimestamp {
            get {
                return this.serverTimestampField;
            }
            set {
                this.serverTimestampField = value;
            }
        }
        
        /// <remarks/>
        public string mode {
            get {
                return this.modeField;
            }
            set {
                this.modeField = value;
            }
        }
        
        /// <remarks/>
        public double lastPrice {
            get {
                return this.lastPriceField;
            }
            set {
                this.lastPriceField = value;
            }
        }
        
        /// <remarks/>
        public int tradeSize {
            get {
                return this.tradeSizeField;
            }
            set {
                this.tradeSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tradeSizeSpecified {
            get {
                return this.tradeSizeFieldSpecified;
            }
            set {
                this.tradeSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime tradeTimestamp {
            get {
                return this.tradeTimestampField;
            }
            set {
                this.tradeTimestampField = value;
            }
        }
        
        /// <remarks/>
        public double netChange {
            get {
                return this.netChangeField;
            }
            set {
                this.netChangeField = value;
            }
        }
        
        /// <remarks/>
        public double percentChange {
            get {
                return this.percentChangeField;
            }
            set {
                this.percentChangeField = value;
            }
        }
        
        /// <remarks/>
        public string tick {
            get {
                return this.tickField;
            }
            set {
                this.tickField = value;
            }
        }
        
        /// <remarks/>
        public double previousLastPrice {
            get {
                return this.previousLastPriceField;
            }
            set {
                this.previousLastPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousLastPriceSpecified {
            get {
                return this.previousLastPriceFieldSpecified;
            }
            set {
                this.previousLastPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime previousTimestamp {
            get {
                return this.previousTimestampField;
            }
            set {
                this.previousTimestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousTimestampSpecified {
            get {
                return this.previousTimestampFieldSpecified;
            }
            set {
                this.previousTimestampFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double bid {
            get {
                return this.bidField;
            }
            set {
                this.bidField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bidSpecified {
            get {
                return this.bidFieldSpecified;
            }
            set {
                this.bidFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int bidSize {
            get {
                return this.bidSizeField;
            }
            set {
                this.bidSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool bidSizeSpecified {
            get {
                return this.bidSizeFieldSpecified;
            }
            set {
                this.bidSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double ask {
            get {
                return this.askField;
            }
            set {
                this.askField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool askSpecified {
            get {
                return this.askFieldSpecified;
            }
            set {
                this.askFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int askSize {
            get {
                return this.askSizeField;
            }
            set {
                this.askSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool askSizeSpecified {
            get {
                return this.askSizeFieldSpecified;
            }
            set {
                this.askSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string unitCode {
            get {
                return this.unitCodeField;
            }
            set {
                this.unitCodeField = value;
            }
        }
        
        /// <remarks/>
        public double open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        public double high {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        public double low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        public double close {
            get {
                return this.closeField;
            }
            set {
                this.closeField = value;
            }
        }
        
        /// <remarks/>
        public string flag {
            get {
                return this.flagField;
            }
            set {
                this.flagField = value;
            }
        }
        
        /// <remarks/>
        public double previousClose {
            get {
                return this.previousCloseField;
            }
            set {
                this.previousCloseField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousCloseSpecified {
            get {
                return this.previousCloseFieldSpecified;
            }
            set {
                this.previousCloseFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double settlement {
            get {
                return this.settlementField;
            }
            set {
                this.settlementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool settlementSpecified {
            get {
                return this.settlementFieldSpecified;
            }
            set {
                this.settlementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double previousSettlement {
            get {
                return this.previousSettlementField;
            }
            set {
                this.previousSettlementField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool previousSettlementSpecified {
            get {
                return this.previousSettlementFieldSpecified;
            }
            set {
                this.previousSettlementFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        public double openInterest {
            get {
                return this.openInterestField;
            }
            set {
                this.openInterestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool openInterestSpecified {
            get {
                return this.openInterestFieldSpecified;
            }
            set {
                this.openInterestFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double fiftyTwoWkHigh {
            get {
                return this.fiftyTwoWkHighField;
            }
            set {
                this.fiftyTwoWkHighField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fiftyTwoWkHighSpecified {
            get {
                return this.fiftyTwoWkHighFieldSpecified;
            }
            set {
                this.fiftyTwoWkHighFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime fiftyTwoWkHighDate {
            get {
                return this.fiftyTwoWkHighDateField;
            }
            set {
                this.fiftyTwoWkHighDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fiftyTwoWkHighDateSpecified {
            get {
                return this.fiftyTwoWkHighDateFieldSpecified;
            }
            set {
                this.fiftyTwoWkHighDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double fiftyTwoWkLow {
            get {
                return this.fiftyTwoWkLowField;
            }
            set {
                this.fiftyTwoWkLowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fiftyTwoWkLowSpecified {
            get {
                return this.fiftyTwoWkLowFieldSpecified;
            }
            set {
                this.fiftyTwoWkLowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime fiftyTwoWkLowDate {
            get {
                return this.fiftyTwoWkLowDateField;
            }
            set {
                this.fiftyTwoWkLowDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool fiftyTwoWkLowDateSpecified {
            get {
                return this.fiftyTwoWkLowDateFieldSpecified;
            }
            set {
                this.fiftyTwoWkLowDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int avgVolume {
            get {
                return this.avgVolumeField;
            }
            set {
                this.avgVolumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool avgVolumeSpecified {
            get {
                return this.avgVolumeFieldSpecified;
            }
            set {
                this.avgVolumeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int sharesOutstanding {
            get {
                return this.sharesOutstandingField;
            }
            set {
                this.sharesOutstandingField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool sharesOutstandingSpecified {
            get {
                return this.sharesOutstandingFieldSpecified;
            }
            set {
                this.sharesOutstandingFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float dividendRateAnnual {
            get {
                return this.dividendRateAnnualField;
            }
            set {
                this.dividendRateAnnualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dividendRateAnnualSpecified {
            get {
                return this.dividendRateAnnualFieldSpecified;
            }
            set {
                this.dividendRateAnnualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public float dividendYieldAnnual {
            get {
                return this.dividendYieldAnnualField;
            }
            set {
                this.dividendYieldAnnualField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool dividendYieldAnnualSpecified {
            get {
                return this.dividendYieldAnnualFieldSpecified;
            }
            set {
                this.dividendYieldAnnualFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime exDividendDate {
            get {
                return this.exDividendDateField;
            }
            set {
                this.exDividendDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool exDividendDateSpecified {
            get {
                return this.exDividendDateFieldSpecified;
            }
            set {
                this.exDividendDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double impliedVolatility {
            get {
                return this.impliedVolatilityField;
            }
            set {
                this.impliedVolatilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool impliedVolatilitySpecified {
            get {
                return this.impliedVolatilityFieldSpecified;
            }
            set {
                this.impliedVolatilityFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int twentyDayAvgVol {
            get {
                return this.twentyDayAvgVolField;
            }
            set {
                this.twentyDayAvgVolField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool twentyDayAvgVolSpecified {
            get {
                return this.twentyDayAvgVolFieldSpecified;
            }
            set {
                this.twentyDayAvgVolFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string month {
            get {
                return this.monthField;
            }
            set {
                this.monthField = value;
            }
        }
        
        /// <remarks/>
        public string year {
            get {
                return this.yearField;
            }
            set {
                this.yearField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime expirationDate {
            get {
                return this.expirationDateField;
            }
            set {
                this.expirationDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool expirationDateSpecified {
            get {
                return this.expirationDateFieldSpecified;
            }
            set {
                this.expirationDateFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public string lastTradingDay {
            get {
                return this.lastTradingDayField;
            }
            set {
                this.lastTradingDayField = value;
            }
        }
        
        /// <remarks/>
        public double twelveMnthPct {
            get {
                return this.twelveMnthPctField;
            }
            set {
                this.twelveMnthPctField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool twelveMnthPctSpecified {
            get {
                return this.twelveMnthPctFieldSpecified;
            }
            set {
                this.twelveMnthPctFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime twelveMnthPctDate {
            get {
                return this.twelveMnthPctDateField;
            }
            set {
                this.twelveMnthPctDateField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool twelveMnthPctDateSpecified {
            get {
                return this.twelveMnthPctDateFieldSpecified;
            }
            set {
                this.twelveMnthPctDateFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://marketdata.websol.barchart.com/service")]
    public partial class getHistoryItem {
        
        private string symbolField;
        
        private string timestampField;
        
        private System.DateTime tradingDayField;
        
        private string sessionCodeField;
        
        private double tickPriceField;
        
        private bool tickPriceFieldSpecified;
        
        private int tickSizeField;
        
        private bool tickSizeFieldSpecified;
        
        private double openField;
        
        private bool openFieldSpecified;
        
        private double highField;
        
        private bool highFieldSpecified;
        
        private double lowField;
        
        private bool lowFieldSpecified;
        
        private double closeField;
        
        private bool closeFieldSpecified;
        
        private int volumeField;
        
        private bool volumeFieldSpecified;
        
        private int openInterestField;
        
        private bool openInterestFieldSpecified;
        
        /// <remarks/>
        public string symbol {
            get {
                return this.symbolField;
            }
            set {
                this.symbolField = value;
            }
        }
        
        /// <remarks/>
        public string timestamp {
            get {
                return this.timestampField;
            }
            set {
                this.timestampField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(DataType="date")]
        public System.DateTime tradingDay {
            get {
                return this.tradingDayField;
            }
            set {
                this.tradingDayField = value;
            }
        }
        
        /// <remarks/>
        public string sessionCode {
            get {
                return this.sessionCodeField;
            }
            set {
                this.sessionCodeField = value;
            }
        }
        
        /// <remarks/>
        public double tickPrice {
            get {
                return this.tickPriceField;
            }
            set {
                this.tickPriceField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tickPriceSpecified {
            get {
                return this.tickPriceFieldSpecified;
            }
            set {
                this.tickPriceFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int tickSize {
            get {
                return this.tickSizeField;
            }
            set {
                this.tickSizeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool tickSizeSpecified {
            get {
                return this.tickSizeFieldSpecified;
            }
            set {
                this.tickSizeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double open {
            get {
                return this.openField;
            }
            set {
                this.openField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool openSpecified {
            get {
                return this.openFieldSpecified;
            }
            set {
                this.openFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double high {
            get {
                return this.highField;
            }
            set {
                this.highField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool highSpecified {
            get {
                return this.highFieldSpecified;
            }
            set {
                this.highFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double low {
            get {
                return this.lowField;
            }
            set {
                this.lowField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool lowSpecified {
            get {
                return this.lowFieldSpecified;
            }
            set {
                this.lowFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public double close {
            get {
                return this.closeField;
            }
            set {
                this.closeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool closeSpecified {
            get {
                return this.closeFieldSpecified;
            }
            set {
                this.closeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int volume {
            get {
                return this.volumeField;
            }
            set {
                this.volumeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool volumeSpecified {
            get {
                return this.volumeFieldSpecified;
            }
            set {
                this.volumeFieldSpecified = value;
            }
        }
        
        /// <remarks/>
        public int openInterest {
            get {
                return this.openInterestField;
            }
            set {
                this.openInterestField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlIgnoreAttribute()]
        public bool openInterestSpecified {
            get {
                return this.openInterestFieldSpecified;
            }
            set {
                this.openInterestFieldSpecified = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://marketdata.websol.barchart.com/service")]
    public enum getHistoryTypeEnum {
        
        /// <remarks/>
        minutes,
        
        /// <remarks/>
        nearbyMinutes,
        
        /// <remarks/>
        formTMinutes,
        
        /// <remarks/>
        daily,
        
        /// <remarks/>
        dailyNearest,
        
        /// <remarks/>
        dailyContinue,
        
        /// <remarks/>
        weekly,
        
        /// <remarks/>
        weeklyNearest,
        
        /// <remarks/>
        weeklyContinue,
        
        /// <remarks/>
        monthly,
        
        /// <remarks/>
        monthlyNearest,
        
        /// <remarks/>
        monthlyContinue,
        
        /// <remarks/>
        quarterly,
        
        /// <remarks/>
        quarterlyNearest,
        
        /// <remarks/>
        quarterlyContinue,
        
        /// <remarks/>
        yearly,
        
        /// <remarks/>
        yearlyNearest,
        
        /// <remarks/>
        yearlyContinue,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://marketdata.websol.barchart.com/service")]
    public enum getHistoryOrderEnum {
        
        /// <remarks/>
        asc,
        
        /// <remarks/>
        desc,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3056.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://marketdata.websol.barchart.com/service")]
    public enum getHistoryVolumeEnum {
        
        /// <remarks/>
        total,
        
        /// <remarks/>
        sum,
        
        /// <remarks/>
        contract,
        
        /// <remarks/>
        sumcontract,
        
        /// <remarks/>
        sumtotal,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getQuoteCompletedEventHandler(object sender, getQuoteCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getQuoteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getQuoteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getQuoteItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getQuoteItem[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void getHistoryCompletedEventHandler(object sender, getHistoryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class getHistoryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal getHistoryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public getHistoryItem[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((getHistoryItem[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591